set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR ARM)

SET(TARGET_TRIPLET ${STM32_TARGET_TRIPLET})

# TOOLCHAIN EXTENSION
IF (WIN32)
    SET(TOOLCHAIN_EXT ".exe")
ELSE ()
    SET(TOOLCHAIN_EXT "")
ENDIF ()

# Find compiler on path
find_program(COMPILER_ON_PATH "${TARGET_TRIPLET}-gcc${TOOLCHAIN_EXT}")
get_filename_component(ARM_TOOLCHAIN_DIR ${COMPILER_ON_PATH} DIRECTORY)

set(BINUTILS_PATH ${ARM_TOOLCHAIN_DIR})
set(TOOLCHAIN_PREFIX ${ARM_TOOLCHAIN_DIR}/${TARGET_TRIPLET})

set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)

set(CMAKE_C_COMPILER "${TOOLCHAIN_PREFIX}-gcc${TOOLCHAIN_EXT}")
message(STATUS "C Compiler: ${CMAKE_C_COMPILER}")
set(CMAKE_ASM_COMPILER ${CMAKE_C_COMPILER})
message(STATUS "ASM Compiler: ${CMAKE_ASM_COMPILER}")
set(CMAKE_CXX_COMPILER "${TOOLCHAIN_PREFIX}-g++${TOOLCHAIN_EXT}")
message(STATUS "C++ Compiler: ${CMAKE_CXX_COMPILER}")

set(CMAKE_OBJCOPY ${TOOLCHAIN_PREFIX}-objcopy${TOOLCHAIN_EXT} CACHE INTERNAL "objcopy tool")
set(CMAKE_SIZE_UTIL ${TOOLCHAIN_PREFIX}-size${TOOLCHAIN_EXT} CACHE INTERNAL "size tool")

set(CMAKE_FIND_ROOT_PATH ${BINUTILS_PATH})
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
